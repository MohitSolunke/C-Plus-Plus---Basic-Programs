// Stack Representation Using Queue 

#include<iostream>
#include<queue>
#include<stack>
using namespace std;


class Stack
{
    int N ;
    queue<int>q1;
    queue<int>q2;
    public:

    Stack()
    {
        N=0;
    }

    void Push(int val)
    {
        q2.push(val);
        N++;
        while(!q1.empty())
        {
            q2.push(q1.front());
            q1.pop();
        }

        queue<int>temp = q2;
        q2 = q1;
        q1 = temp;
    }

    void pop()
    {
        q1.pop();
        N--;
    }

    int top()
    {
        return q1.front();
    }

    int size()
    {
        return N;
    }

    void display()
    {
        while(!q1.empty())
        {
            cout<<q1.front()<<endl;
            q1.pop();
        }
    }


};

int main()
{
    Stack st;
    st.Push(1);
    st.Push(2);
    st.Push(3);
    st.Push(4);

// cout<<st.top()<<endl;
// st.pop();
st.display();

    
    return 0;
}
